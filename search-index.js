var searchIndex = JSON.parse('{\
"forma":{"doc":"An opinionated SQL formatter","t":[17,3,12,12,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DEFAULT_MAX_WIDTH","Opt","input","check","max_width","formatter","main","from","into","borrow","borrow_mut","try_from","try_into","type_id","eq","ne","fmt","clap","from_clap","augment_clap","is_subcommand"],"q":["forma","","","","","","","","","","","","","","","","","","","",""],"d":["","","A SQL input to format; either a file path or stdin.","Check if formatting would occur without applying it.","The maximum allowed column width before wrapping.","Given a reader, a writer, a check bool, and max width to …","Main entrypoint for the <code>forma</code> binary.","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,null,[[["bool",15],["usize",15]],["result",6]],[[],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["opt",3]],["bool",15]],[[["opt",3]],["bool",15]],[[["formatter",3]],["result",6]],[[],["app",3]],[[["argmatches",3]]],[[["app",3]],["app",3]],[[],["bool",15]]],"p":[[3,"Opt"]]},\
"formation":{"doc":"An opinionated SQL formatter","t":[0,6,4,13,13,13,13,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["error","Result","FormaError","InvalidInput","WouldFormat","TransformationFailure","Utf8Failure","format","format","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","from","from","fmt","fmt","source"],"q":["formation","formation::error","","","","","","formation","formation::format","formation::error","","","","","","","","","","","","",""],"d":["Error module","An alias for a <code>std::result::Result</code> that pins <code>FormaError</code>.","Forma error type.","Unable to parse given input as SQL.","Formatting would occur, i.e. when <code>check</code> is <code>true</code>.","A transformation failure that wraps <code>io::Error</code>.","A UTF-8 failure.","The primary formatting interface","Formats a given SQL string in accordance with the given …","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,null,null,null,null,[[["bool",15],["usize",15],["str",15]],[["result",6],["vec",3]]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["parsererror",4]]],[[["error",3]]],[[["fromutf8error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["error",8],["option",4]]]],"p":[[4,"FormaError"]]}\
}');
initSearch(searchIndex);